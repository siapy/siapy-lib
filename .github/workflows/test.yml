name: Test

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
    types:
      - opened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    name: Test Python ${{ matrix.python-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
      - name: Install dependencies
        run: pdm install
      - name: Lint code
        run: ./scripts/lint.sh
      - name: Run tests with coverage report
        # run: pdm run pytest --cov=./ --cov-report=html -m "not manual"
        run: ./scripts/test.sh "Coverage for ${{ github.sha }}"
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        # Only upload for Python 3.12
        if: matrix.python-version == '3.12'
        with:
          name: coverage-html
          path: htmlcov

  # https://github.com/marketplace/actions/alls-green#why
  alls-green: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  smokeshow:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      statuses: write

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - run: pip install smokeshow
      - uses: actions/download-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # run-id: ${{ github.event.workflow_run.id }}
      - run: smokeshow upload htmlcov
        env:
          SMOKESHOW_GITHUB_STATUS_DESCRIPTION: Coverage {coverage-percentage}
          SMOKESHOW_GITHUB_COVERAGE_THRESHOLD: 50
          SMOKESHOW_GITHUB_CONTEXT: coverage
          SMOKESHOW_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SMOKESHOW_GITHUB_PR_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
          SMOKESHOW_AUTH_KEY: ${{ secrets.SMOKESHOW_AUTH_KEY }}
